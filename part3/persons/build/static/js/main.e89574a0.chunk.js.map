{"version":3,"sources":["components/Filter.js","components/ContactForm.js","components/Persons.js","services/persons.js","components/Notification.js","App.js","index.js"],"names":["Filter","filter","onChange","value","ContactForm","onSubmit","newName","handleNameChange","newNumber","handleNumberChange","type","Button","onClick","Persons","persons","deletePerson","person","name","toLowerCase","includes","map","key","id","number","baseUrl","axios","get","then","response","data","newObject","post","put","delete","Notification","message","messageType","className","App","useState","setPersons","setNewName","setNewNumber","setFilter","setMessage","setMessageType","useEffect","PersonService","initialPersons","console","log","length","updatePerson","find","p","changedPerson","returnedPerson","makeMessage","catch","error","messageNew","messageTypeNew","setTimeout","event","target","preventDefault","newPerson","newPersons","concat","window","confirm","deleteSentence","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e89574a0.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Filter = ({filter, onChange}) => {\r\n    return (\r\n        <div>\r\n            <p>search <input value={filter} onChange={onChange}/></p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Filter","import React from 'react'\r\n\r\nconst ContactForm = ({onSubmit, newName, handleNameChange, newNumber, handleNumberChange}) => {\r\n    return(\r\n        <form onSubmit={onSubmit}>\r\n            <table>\r\n                <tbody>\r\n                    <tr>\r\n                        <td>name:</td>\r\n                        <td><input value={newName} onChange={handleNameChange}/></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>number:</td>\r\n                        <td><input value={newNumber} onChange={handleNumberChange}/></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td><button type=\"submit\">add</button></td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default ContactForm","import React from 'react'\r\n\r\nconst Button = ({onClick}) => {\r\n    return(\r\n        <div>\r\n            <button onClick={onClick}>\r\n                delete\r\n            </button>\r\n        </div>   \r\n    )\r\n}\r\n\r\nconst Persons = ({persons, filter, deletePerson}) => {\r\n    return (\r\n        <table>\r\n            <tbody>\r\n                {persons\r\n                .filter(person => person.name.toLowerCase().includes(filter))\r\n                .map((person) => \r\n                    <tr key={person.id}>\r\n                        <td>{person.name}</td> \r\n                        <td>{person.number}</td>\r\n                        <td><Button onClick={() => {deletePerson(person.id)}}/></td>\r\n                    </tr> \r\n                )}\r\n            </tbody>\r\n        </table>\r\n    )\r\n}\r\n\r\nexport default Persons","import axios from 'axios'\r\nconst baseUrl = 'http://localhost:3001/api/persons'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst create = (newObject) => {\r\n    const request = axios.post(baseUrl, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst remove = (id) =>{\r\n    const request = axios.delete(`${baseUrl}/${id}`)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nexport default {getAll, create, update, remove}","import React from 'react'\r\n// import './../index.css'\r\n\r\nconst Notification = ({message, messageType}) => {\r\n    if (message === null || messageType === null){\r\n        //console.log('message = ', message, ', message type = ', messageType)\r\n        return null\r\n    }\r\n\r\n    if (messageType === 0){\r\n        return (\r\n            <div className=\"error\">\r\n                {message}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    if (messageType === 1){\r\n        return (\r\n            <div className=\"message\">\r\n                {message}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Notification","import React, {useState, useEffect} from 'react';\r\nimport Filter from './components/Filter'\r\nimport ContactForm from './components/ContactForm'\r\nimport Persons from './components/Persons'\r\nimport PersonService from './services/persons'\r\nimport Notification from './components/Notification'\r\nimport './index.css'\r\n\r\n//! start database\r\n//! run \"npm run server\"\r\n\r\nconst App = () => {\r\n\r\n    //* State Declaration\r\n    const [persons, setPersons] = useState([])\r\n    const [newName, setNewName] = useState('')\r\n    const [newNumber, setNewNumber] = useState('')\r\n    const [filter, setFilter] = useState('')\r\n    const [message, setMessage] = useState(null)\r\n    const [messageType, setMessageType] = useState(null)\r\n        \r\n    //* Init phonebook\r\n    useEffect(() => {\r\n        PersonService\r\n            .getAll()\r\n            .then(initialPersons => {\r\n                setPersons(initialPersons)\r\n            })\r\n    }, [])\r\n    console.log('render', persons.length, 'contacts')\r\n\r\n    //* Add new Contact\r\n    const addPerson = (event) => {\r\n        event.preventDefault()\r\n        \r\n        const sameName = persons.filter(person => person.name === newName)\r\n        \r\n        if (sameName.length === 0) {\r\n            const newPerson = {\r\n                name: newName,\r\n                number: newNumber\r\n            }\r\n            \r\n            PersonService\r\n                .create(newPerson)\r\n                .then(newPersons => {\r\n                    setPersons(persons.concat(newPersons))\r\n                    makeMessage(`${newPerson.name} added`, 1)\r\n                })\r\n            \r\n            setNewName('')\r\n            setNewNumber('')\r\n        } else {\r\n            if (window.confirm(newName + ' is already added to phonebook. replace old number with new one?')){\r\n                updatePerson(newName, newNumber)\r\n            }\r\n        }\r\n    }\r\n\r\n    //* Update contact\r\n    const updatePerson = (name, number) => {\r\n        const person = persons.find(p => p.name === name)\r\n        const changedPerson = {...person, number: number}\r\n\r\n        PersonService\r\n            .update(person.id, changedPerson)\r\n            .then(returnedPerson => {\r\n                setPersons(persons.map(p => p.id !== person.id ? p: returnedPerson))\r\n                makeMessage(`${person.name} phone number updated`, 1)\r\n            })\r\n            .catch(error => {\r\n                makeMessage(`${person.name} not found in phonebook`, 0)\r\n                setPersons(persons.filter(p => p.id !== person.id))\r\n            })\r\n            \r\n    }\r\n\r\n    //* Delete contact\r\n    const deletePerson = (id) => {\r\n        const person = persons.find(p => p.id === id)\r\n        const deleteSentence = \"Delete \" + person.name + \"?\"\r\n        if (window.confirm(deleteSentence)){\r\n            PersonService\r\n                .remove(id)\r\n                .then(\r\n                    setPersons(persons.filter(p => p.id !== id))\r\n                )\r\n        }\r\n    }\r\n\r\n    //* Generate message\r\n    const makeMessage = (messageNew, messageTypeNew) => {\r\n        setMessage(messageNew)\r\n        setMessageType(messageTypeNew)\r\n\r\n        setTimeout(() => {\r\n            setMessage(null)\r\n        }, 5000)\r\n    }\r\n\r\n    //* Handler \r\n    const handleNameChange = (event) => {\r\n        setNewName(event.target.value)\r\n    }\r\n\r\n    const handleNumberChange = (event) => {\r\n        setNewNumber(event.target.value)\r\n    }\r\n\r\n    const handleFilter = (event) => {\r\n        setFilter(event.target.value)\r\n    }\r\n\r\n    //* return \r\n    return (\r\n        <div>\r\n            <h1>Phonebook</h1>\r\n            <Notification message={message} messageType={messageType}/>\r\n            <Filter filter={filter} onChange={handleFilter}/>\r\n            <h3>New contact</h3>\r\n            <ContactForm \r\n                onSubmit={addPerson} \r\n                newName={newName} \r\n                handleNameChange={handleNameChange}\r\n                newNumber={newNumber} \r\n                handleNumberChange={handleNumberChange}/>\r\n            <h3>Contacts</h3>\r\n            <Persons persons={persons} filter={filter} deletePerson={deletePerson}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App'\r\n\r\nReactDOM.render( <App />, document.getElementById('root'))\r\n\r\n"],"sourceRoot":""}